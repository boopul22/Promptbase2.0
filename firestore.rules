rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // User profiles with credit management security
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      
      // Only allow users to update specific fields, not credits or refresh timestamps
      allow update: if isAuthenticated() && 
        isOwner(userId) && 
        (!request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['credits', 'lastCreditRefresh', 'isAdmin']));
      
      // Allow initial user document creation
      allow create: if isAuthenticated() && 
        isOwner(userId) && 
        request.resource.data.credits == 10 &&
        request.resource.data.isAdmin == false;
    }

    // Blog posts
    match /blog_posts/{postId} {
      allow read: if true; // Public read access
      allow create, update, delete: if isAdmin();
    }

    // Website metadata
    match /metadata/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}